// SPDX-License-Identifier: MIT
// SPDX-FileCopyrightText: 2023 Steadybit GmbH

package extelb

import (
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/steadybit/extension-aws/v2/config"
)

const (
	albTargetId = "com.steadybit.extension_aws.alb"
	albIcon     = "data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2048%2048%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20stroke%3D%22none%22%20stroke-width%3D%221%22%20fill-rule%3D%22evenodd%22%20d%3D%22M33.69%2C34.375%20L36.035%2C34.375%20L36.035%2C32%20L33.69%2C32%20L33.69%2C34.375%20Z%20M26.751%2C34.375%20L29.126%2C34.375%20L29.126%2C32%20L26.751%2C32%20L26.751%2C34.375%20Z%20M18.876%2C34.375%20L21.251%2C34.375%20L21.251%2C32%20L18.876%2C32%20L18.876%2C34.375%20Z%20M11.966%2C34.375%20L14.251%2C34.375%20L14.251%2C32%20L11.966%2C32%20L11.966%2C34.375%20Z%20M18.001%2C16.875%20L30.001%2C16.875%20L30.001%2C11%20L18.001%2C11%20L18.001%2C16.875%20Z%20M37.035%2C30%20L35.501%2C30%20L35.501%2C26.625%20C35.501%2C26.072%2035.053%2C25.625%2034.501%2C25.625%20L32.001%2C25.625%20L32.001%2C22.25%20C32.001%2C21.697%2031.553%2C21.25%2031.001%2C21.25%20L25.001%2C21.25%20L25.001%2C18.875%20L31.001%2C18.875%20C31.553%2C18.875%2032.001%2C18.428%2032.001%2C17.875%20L32.001%2C10%20C32.001%2C9.447%2031.553%2C9%2031.001%2C9%20L17.001%2C9%20C16.448%2C9%2016.001%2C9.447%2016.001%2C10%20L16.001%2C17.875%20C16.001%2C18.428%2016.448%2C18.875%2017.001%2C18.875%20L23.001%2C18.875%20L23.001%2C21.25%20L17.001%2C21.25%20C16.448%2C21.25%2016.001%2C21.697%2016.001%2C22.25%20L16.001%2C25.625%20L13.501%2C25.625%20C12.948%2C25.625%2012.501%2C26.072%2012.501%2C26.625%20L12.501%2C30%20L10.965%2C30%20C10.413%2C30%209.965%2C30.447%209.965%2C31%20L9.965%2C35.375%20C9.965%2C35.928%2010.413%2C36.375%2010.965%2C36.375%20L15.251%2C36.375%20C15.803%2C36.375%2016.251%2C35.928%2016.251%2C35.375%20L16.251%2C31%20C16.251%2C30.447%2015.803%2C30%2015.251%2C30%20L14.501%2C30%20L14.501%2C27.625%20L18.626%2C27.625%20L18.626%2C30%20L17.876%2C30%20C17.323%2C30%2016.876%2C30.447%2016.876%2C31%20L16.876%2C35.375%20C16.876%2C35.928%2017.323%2C36.375%2017.876%2C36.375%20L22.251%2C36.375%20C22.803%2C36.375%2023.251%2C35.928%2023.251%2C35.375%20L23.251%2C31%20C23.251%2C30.447%2022.803%2C30%2022.251%2C30%20L20.626%2C30%20L20.626%2C26.625%20C20.626%2C26.072%2020.178%2C25.625%2019.626%2C25.625%20L18.001%2C25.625%20L18.001%2C23.25%20L30.001%2C23.25%20L30.001%2C25.625%20L28.376%2C25.625%20C27.823%2C25.625%2027.376%2C26.072%2027.376%2C26.625%20L27.376%2C30%20L25.751%2C30%20C25.198%2C30%2024.751%2C30.447%2024.751%2C31%20L24.751%2C35.375%20C24.751%2C35.928%2025.198%2C36.375%2025.751%2C36.375%20L30.126%2C36.375%20C30.678%2C36.375%2031.126%2C35.928%2031.126%2C35.375%20L31.126%2C31%20C31.126%2C30.447%2030.678%2C30%2030.126%2C30%20L29.376%2C30%20L29.376%2C27.625%20L33.501%2C27.625%20L33.501%2C30%20L32.69%2C30%20C32.137%2C30%2031.69%2C30.447%2031.69%2C31%20L31.69%2C35.375%20C31.69%2C35.928%2032.137%2C36.375%2032.69%2C36.375%20L37.035%2C36.375%20C37.587%2C36.375%2038.035%2C35.928%2038.035%2C35.375%20L38.035%2C31%20C38.035%2C30.447%2037.587%2C30%2037.035%2C30%20L37.035%2C30%20Z%20M24.001%2C44%20C12.972%2C44%204%2C35.028%204%2C24%20C4%2C12.972%2012.972%2C4%2024.001%2C4%20C35.029%2C4%2044.001%2C12.972%2044.001%2C24%20C44.001%2C35.028%2035.029%2C44%2024.001%2C44%20L24.001%2C44%20Z%20M24.001%2C2%20C11.869%2C2%202%2C11.869%202%2C24%20C2%2C36.131%2011.869%2C46%2024.001%2C46%20C36.131%2C46%2046.001%2C36.131%2046.001%2C24%20C46.001%2C11.869%2036.131%2C2%2024.001%2C2%20L24.001%2C2%20Z%22%20id%3D%222%22%20fill%3D%22currentColor%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E"
)

func matchesTagFilter(tags []types.Tag, filters []config.TagFilter) bool {
	if len(filters) == 0 {
		return true
	}

	for _, filter := range filters {
		matched := false

		for _, tag := range tags {
			if tag.Key != nil && *tag.Key == filter.Key {
				// Check if at least one value matches
				for _, filterValue := range filter.Values {
					if tag.Value != nil && *tag.Value == filterValue {
						matched = true
						break
					}
				}
			}
			if matched {
				break
			}
		}

		// If a filter didn't match any tags, return false
		if !matched {
			return false
		}
	}

	return true
}
