manifest should add aws env vars:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_ASSUME_ROLES
                  value: arn:aws:iam::123456789012:role/role1,arn:aws:iam::123456789012:role/role2
                - name: STEADYBIT_EXTENSION_REGIONS
                  value: eu-central-1,us-east-1
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_EC2
                  value: example.ec2.1,example.ec2.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_ECS
                  value: example.ecs.1,example.ecs.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_ELASTICACHE
                  value: example.elasticache.1,example.elasticache.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_ELB
                  value: example.elb.1,example.elb.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_ZONE
                  value: example.zone.1,example.zone.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_FIS
                  value: example.fis.1,example.fis.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_MSK
                  value: example.msk.1,example.msk.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_LAMBDA
                  value: example.lambda.1,example.lambda.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_RDS
                  value: example.rds.1,example.rds.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_SUBNET
                  value: example.subnet.1,example.subnet.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_VPC
                  value: example.vpc.1,example.vpc.2
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_EC2
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_ECS
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_ELASTICACHE
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_ELB
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_FIS
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_MSK
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_LAMBDA
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_RDS
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_SUBNET
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_VPC
                  value: "true"
                - name: STEADYBIT_EXTENSION_DISCOVERY_DISABLED_ZONE
                  value: "true"
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot using podAnnotations and Labels:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
            some-annotation: some-annotation-value
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            some-label: some-label-value
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with TLS:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/extension/certificates/server-cert/tls.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/extension/certificates/server-cert/tls.key
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts:
                - mountPath: /etc/extension/certificates/server-cert
                  name: certificate-server-cert
                  readOnly: true
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes:
            - name: certificate-server-cert
              secret:
                optional: false
                secretName: server-cert
manifest should match snapshot with advanced assume role config:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_ASSUME_ROLES_ADVANCED
                  value: '[{"regions":["us-east-1","eu-central-1"],"roleArn":"arn:aws:iam::11111111111111:role/steadybit-extension-aws","tagFilters":[{"key":"application","values":["Demo","Shop"]}]},{"roleArn":"arn:aws:iam::22222222222222:role/steadybit-extension-aws"}]'
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with extra env vars:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: FOO
                  value: bar
              envFrom:
                - configMapRef: null
                  name: env-configmap
                - name: env-secrets
                  secretRef: null
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with extra labels:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
        tags.datadoghq.com/service: steadybit-extension
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
            tags.datadoghq.com/service: steadybit-extension
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with mutual TLS:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/extension/certificates/server-cert/tls.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/extension/certificates/server-cert/tls.key
                - name: STEADYBIT_EXTENSION_TLS_CLIENT_CAS
                  value: /etc/extension/certificates/client-cert-a/tls.crt,/etc/extension/certificates/client-cert-a/tls.crt
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts:
                - mountPath: /etc/extension/certificates/client-cert-a
                  name: certificate-client-cert-a
                  readOnly: true
                - mountPath: /etc/extension/certificates/server-cert
                  name: certificate-server-cert
                  readOnly: true
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes:
            - name: certificate-client-cert-a
              secret:
                optional: false
                secretName: client-cert-a
            - name: certificate-server-cert
              secret:
                optional: false
                secretName: server-cert
manifest should match snapshot with mutual TLS using containerPaths:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
                  value: /etc/tls/server.crt
                - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
                  value: /etc/tls/server.key
                - name: STEADYBIT_EXTENSION_TLS_CLIENT_CAS
                  value: /etc/tls/ca.crt,/etc/tls/ca2.crt
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with podSecurityContext:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            runAsUser: 2222
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with priority class:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          priorityClassName: my-priority-class
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot with tag filters:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_EXTENSION_TAG_FILTERS
                  value: '[{"key":"application","values":["Demo","Shop"]}]'
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
manifest should match snapshot without TLS:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        steadybit.com/discovery-disabled: "true"
        steadybit.com/extension: "true"
      name: RELEASE-NAME-steadybit-extension-aws
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-extension-aws
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: steadybit-extension-aws
            steadybit.com/discovery-disabled: "true"
            steadybit.com/extension: "true"
        spec:
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
              image: ghcr.io/steadybit/extension-aws:v0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health/liveness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: extension
              ports:
                - containerPort: 8085
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health/readiness
                  port: 8086
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts: null
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-extension-aws
          volumes: null
